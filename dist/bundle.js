(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>i});var r=t(537),A=t.n(r),a=t(645),o=t.n(a)()(A());o.push([n.id,':root {\n  --clr-primary: #25274d;\n  --clr-light: #f4f4f4;\n  --clr-light-blue: rgb(41, 100, 138);\n  --clr-mid: rgba(41, 100, 138, 0.2);\n  --clr-dark: #25274d;\n  --clr-warning: rgb(99, 36, 36);\n}\n\n*,\n*::before,\n*::after {\n  font-family: inherit;\n  box-sizing: border-box;\n}\n\nhtml {\n  font-size: 90%;\n}\n\nbody {\n  margin: 0 2rem;\n  font-family: "Work Sans", sans-serif;\n  font-weight: 300;\n  font-size: 1.5rem;\n  background-color: var(--clr-primary);\n  color: var(--clr-light);\n  display: grid;\n  grid:\n    "header header header header" auto\n    "...... lists  active ......" auto /\n    1fr minmax(180px, 300px) minmax(500px, 700px) 1fr;\n  padding-bottom: 8rem;\n}\n\n.title {\n  grid-area: header;\n  text-align: center;\n  font-size: calc(5vw + 2rem);\n  font-weight: 900;\n  color: var(--clr-light-blue);\n  opacity: 0.5;\n  letter-spacing: 1px;\n  margin: 0.2em 0;\n}\n\n.all-tasks {\n  position: relative;\n  grid-area: lists;\n}\n\n.all-tasks form {\n  display: flex;\n}\n\n.task-list {\n  font-size: 1.2rem;\n  line-height: 1.7;\n  list-style: circle;\n  padding-left: 1.1em;\n}\n\n.list-name {\n  cursor: pointer;\n}\n\n.list-name:hover {\n  opacity: 0.7;\n}\n\n.btn {\n  cursor: pointer;\n  background: 0;\n  border: 0;\n  padding: 0;\n  color: inherit;\n  font-size: 1rem;\n  float: left;\n}\n\n.btn.create {\n  font-size: 1.7rem;\n  font-weight: 900;\n  margin-right: 0.25em;\n  transition: opacity 250ms ease-in;\n}\n\n.btn.create:hover {\n  opacity: 0.7;\n}\n\n.btn-delete {\n  opacity: 0.7;\n  font-size: 1rem;\n  transition: color 200ms;\n}\n\n.btn.delete:hover {\n  color: var(--clr-warning);\n}\n\n.new {\n  background: transparent;\n  border: 0;\n  color: inherit;\n  border-bottom: 1px solid currentColor;\n  font-size: inherit;\n  outline: none;\n  padding: 0.25em;\n  transition: border-bottom 150ms ease-in;\n  order: 2;\n}\n\n.new::placeholder {\n  opacity: 0.4;\n}\n\n::-webkit-input-placeholder {\n  color: inherit;\n  opacity: 0.6;\n}\n\n.new:focus {\n  border-bottom-width: 3px;\n}\n\n.new:focus::placeholder {\n  opacity: 0.15;\n}\n\n.new.list {\n  font-size: 1.1rem;\n  width: 80%;\n}\n\n.new.task {\n  margin-bottom: 0;\n}\n\n.active-list {\n  font-weight: 700;\n}\n\n.todo-list {\n  --spacer: 2rem;\n  min-width: 400px;\n  width: fit-content;\n  position: relative;\n  grid-area: active;\n  background: var(--clr-light);\n  color: var(--clr-dark);\n  border-radius: 10px;\n}\n\n.todo-header {\n  padding: var(--spacer);\n  background-color: var(--clr-mid);\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.list-title {\n  margin: 0 1em 0 0;\n}\n\n.task-count {\n  margin: 0;\n  font-size: 1rem;\n}\n\n.todo-body {\n  padding: var(--spacer);\n}\n\n.new-task-creator {\n  padding-top: 10px;\n}\n\n.new-task-creator .create {\n  color: var(--clr-primary);\n}\n\n[type="checkbox"] {\n  opacity: 0;\n  position: absolute;\n}\n\n.task label {\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n}\n\n.task {\n  position: relative;\n  margin-bottom: 1.25em;\n}\n\n.task label:hover {\n  cursor: pointer;\n}\n\n/* task separators */\n.task::after {\n  content: "";\n  position: absolute;\n  right: 0;\n  left: 0;\n  bottom: -0.5em;\n  height: 1px;\n  background: currentColor;\n  opacity: 0.1;\n}\n\n.custom-checkbox {\n  --size: 0.75em;\n  display: inline-block;\n  width: var(--size);\n  height: var(--size);\n  margin-right: var(--size);\n  cursor: pointer;\n  border: 2px solid currentColor;\n  border-radius: 50%;\n  transform: scale(1);\n  transition: transform 300ms ease-in-out;\n  grid-area: checkbox;\n}\n\n.task:hover .custom-checkbox,\n[type="checkbox"]:focus + label .custom-checkbox {\n  transform: scale(1.2);\n  color: var(--clr-primary);\n}\n\n[type="checkbox"]:checked + label .custom-checkbox {\n  background: var(--clr-primary);\n  border-color: var(--clr-primary);\n  box-shadow: inset 0 0 0px 2px white;\n}\n\n[type="checkbox"]:checked + label {\n  opacity: 0.5;\n}\n\n/* task strike-through */\n.task label::after {\n  content: "";\n  position: absolute;\n  left: 0;\n  right: 0;\n  left: 1.5em;\n  top: 34px;\n  height: 3px;\n  color: red;\n  opacity: 0.5;\n  background: currentColor;\n  transform: scaleX(0);\n  transform-origin: right;\n  transition: transform 150ms ease-in-out;\n}\n\n[type="checkbox"]:checked + label::after {\n  transform: scaleX(1);\n  transform-origin: left;\n}\n\n.delete-stuff {\n  display: flex;\n  justify-content: space-evenly;\n  position: absolute;\n  width: 100%;\n  left: 0;\n  bottom: -35px;\n  color: var(--clr-light);\n}\n\n.title-change {\n  width: 250px;\n  background: transparent;\n  border: 0;\n  color: inherit;\n  border-bottom: 3px solid currentColor;\n  font-size: inherit;\n  outline: none;\n  font-weight: bold;\n}\n\n#due {\n  display: inline-flex;\n  font-size: 1rem;\n  padding-bottom: 0.2rem;\n}\n\n#due::placeholder {\n  opacity: 0.4;\n}\n\n.new-task-creator label {\n  font-size: 1rem;\n}\n\n.new-task-name,\n.new-task-date {\n  display: flex;\n  align-items: center;\n}\n\n.new-task-description input {\n  margin: 2rem 0;\n  font-size: 1rem;\n  width: 260px;\n}\n\n.task-details-container {\n  margin-left: 17px;\n}\n\n.new-task-date {\n  margin-top: var(--spacer);\n  font-size: 1rem;\n}\n\n.new-task-date label {\n  margin-right: 0.5rem;\n  grid-area: label;\n}\n\n.new-task-priority {\n  margin-top: 0.8rem;\n  font-size: 1rem;\n}\n\n.task label {\n  display: grid;\n  grid:\n    "checkbox name btn date priority" auto\n    "des des des des des" auto /\n    40px minmax(150px, 400px) 40px 200px 100px;\n  align-items: center;\n}\n\n.task label h3 {\n  font-weight: normal;\n  font-size: 1.5rem;\n}\n\n.task label h3:first-of-type {\n  grid-area: name;\n}\n\n.task label h3:last-child {\n  text-align: center;\n  grid-area: priority;\n}\n\n.task label h3:nth-last-child(2) {\n  text-align: center;\n  grid-area: date;\n}\n\n.expand-btn {\n  background-color: transparent;\n  color: #444;\n  height: 30px;\n  width: 30px;\n  cursor: pointer;\n  border: none;\n  outline: none;\n  grid-area: btn;\n}\n\n.expand-btn::after {\n  content: "\\25be";\n  font-size: 1.5rem;\n}\n\n.expand-btn.active:after {\n  content: "\\25c0";\n  font-size: inherit;\n}\n\n.active,\n.expand-btn:hover {\n  background-color: rgba(41, 100, 138, 0.05);\n  border-radius: 50%;\n}\n\n/* Style the collapsible content. Note: hidden by default */\n.content {\n  padding: 1rem;\n  margin: 0 calc(40px - 0.75em);\n  width: 95%;\n  display: none;\n  overflow: hidden;\n  background-color: rgba(41, 100, 138, 0.05);\n  grid-area: des;\n  border-radius: 5px;\n  font-size: 1rem;\n}\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:[':root {\n  --clr-primary: #25274d;\n  --clr-light: #f4f4f4;\n  --clr-light-blue: rgb(41, 100, 138);\n  --clr-mid: rgba(41, 100, 138, 0.2);\n  --clr-dark: #25274d;\n  --clr-warning: rgb(99, 36, 36);\n}\n\n*,\n*::before,\n*::after {\n  font-family: inherit;\n  box-sizing: border-box;\n}\n\nhtml {\n  font-size: 90%;\n}\n\nbody {\n  margin: 0 2rem;\n  font-family: "Work Sans", sans-serif;\n  font-weight: 300;\n  font-size: 1.5rem;\n  background-color: var(--clr-primary);\n  color: var(--clr-light);\n  display: grid;\n  grid:\n    "header header header header" auto\n    "...... lists  active ......" auto /\n    1fr minmax(180px, 300px) minmax(500px, 700px) 1fr;\n  padding-bottom: 8rem;\n}\n\n.title {\n  grid-area: header;\n  text-align: center;\n  font-size: calc(5vw + 2rem);\n  font-weight: 900;\n  color: var(--clr-light-blue);\n  opacity: 0.5;\n  letter-spacing: 1px;\n  margin: 0.2em 0;\n}\n\n.all-tasks {\n  position: relative;\n  grid-area: lists;\n}\n\n.all-tasks form {\n  display: flex;\n}\n\n.task-list {\n  font-size: 1.2rem;\n  line-height: 1.7;\n  list-style: circle;\n  padding-left: 1.1em;\n}\n\n.list-name {\n  cursor: pointer;\n}\n\n.list-name:hover {\n  opacity: 0.7;\n}\n\n.btn {\n  cursor: pointer;\n  background: 0;\n  border: 0;\n  padding: 0;\n  color: inherit;\n  font-size: 1rem;\n  float: left;\n}\n\n.btn.create {\n  font-size: 1.7rem;\n  font-weight: 900;\n  margin-right: 0.25em;\n  transition: opacity 250ms ease-in;\n}\n\n.btn.create:hover {\n  opacity: 0.7;\n}\n\n.btn-delete {\n  opacity: 0.7;\n  font-size: 1rem;\n  transition: color 200ms;\n}\n\n.btn.delete:hover {\n  color: var(--clr-warning);\n}\n\n.new {\n  background: transparent;\n  border: 0;\n  color: inherit;\n  border-bottom: 1px solid currentColor;\n  font-size: inherit;\n  outline: none;\n  padding: 0.25em;\n  transition: border-bottom 150ms ease-in;\n  order: 2;\n}\n\n.new::placeholder {\n  opacity: 0.4;\n}\n\n::-webkit-input-placeholder {\n  color: inherit;\n  opacity: 0.6;\n}\n\n.new:focus {\n  border-bottom-width: 3px;\n}\n\n.new:focus::placeholder {\n  opacity: 0.15;\n}\n\n.new.list {\n  font-size: 1.1rem;\n  width: 80%;\n}\n\n.new.task {\n  margin-bottom: 0;\n}\n\n.active-list {\n  font-weight: 700;\n}\n\n.todo-list {\n  --spacer: 2rem;\n  min-width: 400px;\n  width: fit-content;\n  position: relative;\n  grid-area: active;\n  background: var(--clr-light);\n  color: var(--clr-dark);\n  border-radius: 10px;\n}\n\n.todo-header {\n  padding: var(--spacer);\n  background-color: var(--clr-mid);\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.list-title {\n  margin: 0 1em 0 0;\n}\n\n.task-count {\n  margin: 0;\n  font-size: 1rem;\n}\n\n.todo-body {\n  padding: var(--spacer);\n}\n\n.new-task-creator {\n  padding-top: 10px;\n}\n\n.new-task-creator .create {\n  color: var(--clr-primary);\n}\n\n[type="checkbox"] {\n  opacity: 0;\n  position: absolute;\n}\n\n.task label {\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n}\n\n.task {\n  position: relative;\n  margin-bottom: 1.25em;\n}\n\n.task label:hover {\n  cursor: pointer;\n}\n\n/* task separators */\n.task::after {\n  content: "";\n  position: absolute;\n  right: 0;\n  left: 0;\n  bottom: -0.5em;\n  height: 1px;\n  background: currentColor;\n  opacity: 0.1;\n}\n\n.custom-checkbox {\n  --size: 0.75em;\n  display: inline-block;\n  width: var(--size);\n  height: var(--size);\n  margin-right: var(--size);\n  cursor: pointer;\n  border: 2px solid currentColor;\n  border-radius: 50%;\n  transform: scale(1);\n  transition: transform 300ms ease-in-out;\n  grid-area: checkbox;\n}\n\n.task:hover .custom-checkbox,\n[type="checkbox"]:focus + label .custom-checkbox {\n  transform: scale(1.2);\n  color: var(--clr-primary);\n}\n\n[type="checkbox"]:checked + label .custom-checkbox {\n  background: var(--clr-primary);\n  border-color: var(--clr-primary);\n  box-shadow: inset 0 0 0px 2px white;\n}\n\n[type="checkbox"]:checked + label {\n  opacity: 0.5;\n}\n\n/* task strike-through */\n.task label::after {\n  content: "";\n  position: absolute;\n  left: 0;\n  right: 0;\n  left: 1.5em;\n  top: 34px;\n  height: 3px;\n  color: red;\n  opacity: 0.5;\n  background: currentColor;\n  transform: scaleX(0);\n  transform-origin: right;\n  transition: transform 150ms ease-in-out;\n}\n\n[type="checkbox"]:checked + label::after {\n  transform: scaleX(1);\n  transform-origin: left;\n}\n\n.delete-stuff {\n  display: flex;\n  justify-content: space-evenly;\n  position: absolute;\n  width: 100%;\n  left: 0;\n  bottom: -35px;\n  color: var(--clr-light);\n}\n\n.title-change {\n  width: 250px;\n  background: transparent;\n  border: 0;\n  color: inherit;\n  border-bottom: 3px solid currentColor;\n  font-size: inherit;\n  outline: none;\n  font-weight: bold;\n}\n\n#due {\n  display: inline-flex;\n  font-size: 1rem;\n  padding-bottom: 0.2rem;\n}\n\n#due::placeholder {\n  opacity: 0.4;\n}\n\n.new-task-creator label {\n  font-size: 1rem;\n}\n\n.new-task-name,\n.new-task-date {\n  display: flex;\n  align-items: center;\n}\n\n.new-task-description input {\n  margin: 2rem 0;\n  font-size: 1rem;\n  width: 260px;\n}\n\n.task-details-container {\n  margin-left: 17px;\n}\n\n.new-task-date {\n  margin-top: var(--spacer);\n  font-size: 1rem;\n}\n\n.new-task-date label {\n  margin-right: 0.5rem;\n  grid-area: label;\n}\n\n.new-task-priority {\n  margin-top: 0.8rem;\n  font-size: 1rem;\n}\n\n.task label {\n  display: grid;\n  grid:\n    "checkbox name btn date priority" auto\n    "des des des des des" auto /\n    40px minmax(150px, 400px) 40px 200px 100px;\n  align-items: center;\n}\n\n.task label h3 {\n  font-weight: normal;\n  font-size: 1.5rem;\n}\n\n.task label h3:first-of-type {\n  grid-area: name;\n}\n\n.task label h3:last-child {\n  text-align: center;\n  grid-area: priority;\n}\n\n.task label h3:nth-last-child(2) {\n  text-align: center;\n  grid-area: date;\n}\n\n.expand-btn {\n  background-color: transparent;\n  color: #444;\n  height: 30px;\n  width: 30px;\n  cursor: pointer;\n  border: none;\n  outline: none;\n  grid-area: btn;\n}\n\n.expand-btn::after {\n  content: "\\25be";\n  font-size: 1.5rem;\n}\n\n.expand-btn.active:after {\n  content: "\\25c0";\n  font-size: inherit;\n}\n\n.active,\n.expand-btn:hover {\n  background-color: rgba(41, 100, 138, 0.05);\n  border-radius: 50%;\n}\n\n/* Style the collapsible content. Note: hidden by default */\n.content {\n  padding: 1rem;\n  margin: 0 calc(40px - 0.75em);\n  width: 95%;\n  display: none;\n  overflow: hidden;\n  background-color: rgba(41, 100, 138, 0.05);\n  grid-area: des;\n  border-radius: 5px;\n  font-size: 1rem;\n}\n'],sourceRoot:""}]);const i=o},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,A,a){"string"==typeof n&&(n=[[null,n,void 0]]);var o={};if(r)for(var i=0;i<this.length;i++){var s=this[i][0];null!=s&&(o[s]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);r&&o[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),A&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=A):l[4]="".concat(A)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),A="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(A," */"),o=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(o).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},o=[],i=0;i<n.length;i++){var s=n[i],c=r.base?s[0]+r.base:s[0],l=a[c]||0,d="".concat(c," ").concat(l);a[c]=l+1;var p=t(d),E={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)e[p].references++,e[p].updater(E);else{var m=A(E,r);r.byIndex=i,e.splice(i,0,{identifier:d,updater:m,references:1})}o.push(d)}return o}function A(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,A){var a=r(n=n||[],A=A||{});return function(n){n=n||[];for(var o=0;o<a.length;o++){var i=t(a[o]);e[i].references--}for(var s=r(n,A),c=0;c<a.length;c++){var l=t(a[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=s}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var A=void 0!==t.layer;A&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,A&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var A=e[r];if(void 0!==A)return A.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n=t(379),e=t.n(n),r=t(795),A=t.n(r),a=t(569),o=t.n(a),i=t(565),s=t.n(i),c=t(216),l=t.n(c),d=t(589),p=t.n(d),E=t(426),m={};m.styleTagTransform=p(),m.setAttributes=s(),m.insert=o().bind(null,"head"),m.domAPI=A(),m.insertStyleElement=l(),e()(E.Z,m),E.Z&&E.Z.locals&&E.Z.locals;const C=document.querySelector("[data-lists]"),u=document.querySelector("[data-new-list-form]"),B=document.querySelector("[data-new-list-input]"),f=document.querySelector("[data-delete-list-button]"),g=document.querySelector("[data-list-display-container]"),h=document.querySelector("[data-list-title]"),b=document.querySelector("[data-list-count]"),k=document.querySelector("[data-tasks]"),y=document.getElementById("task-template"),v=document.querySelector("[data-new-task-form]"),x=document.querySelector("[data-new-task-name]"),w=document.querySelector("[data-new-task-description]"),z=document.querySelector("[data-due-date-input]"),S=document.getElementById("task-priority"),Y=document.querySelector("[data-clear-complete-tasks-button]"),j="task.lists",q="task.selectedListId";let T=JSON.parse(localStorage.getItem(j))||[],L=localStorage.getItem(q);function W(n){return{id:Date.now().toString(),name:n,tasks:[]}}function N(n,e,t,r){return{id:Date.now().toString(),name:n,description:e,dueDate:t,priority:r,complete:!1}}function I(){D(),U()}function D(){localStorage.setItem(j,JSON.stringify(T)),localStorage.setItem(q,L)}function U(){Z(C),X();const n=T.find((n=>n.id===L));null==L?g.style.display="none":(g.style.display="",h.innerText=n.name,O(n),Z(k),M(n))}function M(n){n.tasks.forEach((n=>{const e=document.importNode(y.content,!0),t=e.querySelector("input");t.id=n.id,t.checked=n.complete;const r=e.querySelector("label");r.htmlFor=n.id;const A=document.createElement("h3"),a=document.createElement("button");a.className="expand-btn";const o=document.createElement("div");o.className="content";const i=document.createElement("h3"),s=document.createElement("h3");A.innerText=`${n.name}`,o.innerText=n.description,i.innerText=n.dueDate,s.innerText=n.priority,r.append(A),r.append(a),r.append(o),r.append(i),r.append(s),k.appendChild(e)}));const e=document.getElementsByClassName("expand-btn");for(let n=0;n<e.length;n++)e[n].addEventListener("click",(function(){this.classList.toggle("active");let n=this.nextElementSibling;"block"===n.style.display?n.style.display="none":n.style.display="block"}))}function O(n){const e=n.tasks.filter((n=>!n.complete)).length,t=1===e?"task":"tasks";b.innerText=`${e} ${t} remaining`}function X(){T.forEach((n=>{const e=document.createElement("li");e.dataset.listId=n.id,e.classList.add("list-name"),e.innerText=n.name,n.id===L&&e.classList.add("active-list"),C.appendChild(e)}))}function Z(n){for(;n.firstChild;)n.removeChild(n.firstChild)}h.ondblclick=function(n){let e=this.innerHTML,t=document.createElement("input");t.classList="title-change",t.value=e,t.onblur=function(){let n=this.value;this.parentNode.innerHTML=n},this.innerHTML="",this.appendChild(t),t.focus()},C.addEventListener("click",(n=>{"li"===n.target.tagName.toLowerCase()&&(L=n.target.dataset.listId,I())})),k.addEventListener("click",(n=>{if("input"===n.target.tagName.toLowerCase()){const e=T.find((n=>n.id===L));e.tasks.find((e=>e.id===n.target.id)).complete=n.target.checked,D(),O(e)}})),Y.addEventListener("click",(n=>{const e=T.find((n=>n.id===L));e.tasks=e.tasks.filter((n=>!n.complete)),I()})),f.addEventListener("click",(n=>{T=T.filter((n=>n.id!==L)),L=null,I()})),u.addEventListener("submit",(n=>{n.preventDefault();const e=B.value;if(null==e||""===e)return;const t=W(e);B.value=null,T.push(t),I()})),v.addEventListener("submit",(n=>{n.preventDefault();const e=x.value,t=w.value;let r=z.value;const A=S.value;if(r=function(n){let e=new Date(n);return isNaN(e.getFullYear())?"":`${e.getMonth()+1}-${e.getDate()+1}-${e.getFullYear()}`}(r),null==e||""===e)return;const a=N(e,t,r,A);x.value=null,z.value=null,w.value=null,T.find((n=>n.id===L)).tasks.push(a),I()}));let R=!1;R||function(){const n=W("Sample List");!1===T.includes(n)&&T.push(n),X(),L=n.listId;const e=N("Sample Task","A brief description goes here.","2-04-2022","low");n.tasks.push(e),M(n),R=!0}(),U()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,