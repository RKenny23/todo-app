(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>i});var r=t(537),o=t.n(r),A=t(645),a=t.n(A)()(o());a.push([n.id,':root {\n  --clr-primary: rgb(54, 112, 199);\n  --clr-light: #f4f4f4;\n  --clr-dark: #333;\n  --clr-warning: rgb(99, 36, 36);\n}\n\n*,\n*::before,\n*::after {\n  font-family: inherit;\n  box-sizing: border-box;\n}\n\n/* html {\n  min-width: 800px;\n} */\n\nbody {\n  margin: 2rem;\n  font-family: "Work Sans", sans-serif;\n  font-weight: 300;\n  font-size: 1.5rem;\n  background-color: var(--clr-primary);\n  color: var(--clr-light);\n  display: grid;\n  grid:\n    "header header header header" auto\n    "...... lists  active ......" auto /\n    1fr minmax(150px, 300px) minmax(198px, 500px) 1fr;\n}\n\n.title {\n  grid-area: header;\n  text-align: center;\n  font-size: calc(7vw + 2rem);\n  font-weight: 900;\n  color: rgba(0, 0, 0, 0.1);\n  letter-spacing: 1px;\n  margin: 0.3em 0 0.5em;\n}\n\n.all-tasks {\n  grid-area: lists;\n}\n\n.task-list {\n  font-size: 1.2rem;\n  line-height: 1.7;\n  list-style: circle;\n  padding-left: 1.1em;\n}\n\n.list-name {\n  cursor: pointer;\n}\n\n.list-name:hover {\n  opacity: 0.7;\n}\n\nform {\n  display: flex;\n}\n\n.btn {\n  cursor: pointer;\n  background: 0;\n  border: 0;\n  padding: 0;\n  color: inherit;\n  font-size: 1rem;\n}\n\n.btn.create {\n  font-size: 1.5rem;\n  font-weight: 900;\n  margin-right: 0.25em;\n  transition: opacity 250ms ease-in;\n}\n\n.btn.create:hover {\n  opacity: 0.7;\n}\n\n.btn-delete {\n  opacity: 0.7;\n  font-size: 1rem;\n  transition: color 200ms;\n}\n\n.btn.delete:hover {\n  color: var(--clr-warning);\n}\n\n.new {\n  background: transparent;\n  border: 0;\n  color: inherit;\n  border-bottom: 1px solid currentColor;\n  font-size: inherit;\n  outline: none;\n  padding: 0.25em;\n  transition: border-bottom 150ms ease-in;\n  order: 2;\n}\n\n.new::placeholder {\n  opacity: 0.4;\n}\n\n::-webkit-input-placeholder {\n  color: inherit;\n  opacity: 0.6;\n}\n\n.new:focus {\n  border-bottom-width: 3px;\n}\n\n.new:focus::placeholder {\n  opacity: 0.15;\n}\n\n.new.list {\n  font-size: 1.1rem;\n}\n\n.new.task {\n  margin-bottom: 0;\n}\n\n.active-list {\n  font-weight: 700;\n}\n\n.todo-list {\n  --spacer: 2rem;\n  min-width: 400px;\n  position: relative;\n  grid-area: active;\n  background: var(--clr-light);\n  color: var(--clr-dark);\n}\n\n.todo-header {\n  padding: var(--spacer);\n  background: #e4e4e4;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.list-title {\n  margin: 0 1em 0 0;\n}\n\n.task-count {\n  margin: 0;\n  font-size: 1rem;\n}\n\n.todo-body {\n  padding: var(--spacer);\n}\n\n.new-task-creator .create {\n  color: var(--clr-primary);\n}\n\n[type="checkbox"] {\n  opacity: 0;\n  position: absolute;\n}\n\n.task label {\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n}\n\n.task {\n  position: relative;\n  margin-bottom: 1.25em;\n}\n\n.task label:hover {\n  cursor: pointer;\n}\n\n.task::after {\n  content: "";\n  position: absolute;\n  right: 0;\n  left: 0;\n  bottom: -0.5em;\n  height: 1px;\n  background: currentColor;\n  opacity: 0.1;\n}\n\n\n.custom-checkbox {\n  --size: 0.75em;\n  display: inline-block;\n  width: var(--size);\n  height: var(--size);\n  margin-right: var(--size);\n  cursor: pointer;\n  border: 2px solid currentColor;\n  border-radius: 50%;\n  transform: scale(1);\n  transition: transform 300ms ease-in-out;\n}\n\n.task:hover .custom-checkbox,\n[type="checkbox"]:focus + label .custom-checkbox {\n  transform: scale(1.2);\n  color: var(--clr-primary);\n}\n\n[type="checkbox"]:checked + label .custom-checkbox {\n  background: var(--clr-primary);\n  border-color: var(--clr-primary);\n  box-shadow: inset 0 0 0px 2px white;\n}\n\n[type="checkbox"]:checked + label {\n  opacity: 0.5\n}\n\n.task label::after {\n  content: "";\n  position: absolute;\n  left: 0;\n  right: 0;\n  left: 1.5em;\n  top: 50%;\n  height: 3px;\n  background: currentColor;\n  transform: scaleX(0);\n  transform-origin: right;\n  transition: transform 150ms ease-in-out\n}\n\n[type="checkbox"]:checked + label::after {\n  transform: scaleX(1);\n  transform-origin: left;\n}\n\n.delete-stuff {\n  display: flex;\n  justify-content: space-evenly;\n  position: absolute;\n  width: 100%;\n  left: 0;\n  bottom: -35px;\n  color: var(--clr-light);\n}',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,gCAAgC;EAChC,oBAAoB;EACpB,gBAAgB;EAChB,8BAA8B;AAChC;;AAEA;;;EAGE,oBAAoB;EACpB,sBAAsB;AACxB;;AAEA;;GAEG;;AAEH;EACE,YAAY;EACZ,oCAAoC;EACpC,gBAAgB;EAChB,iBAAiB;EACjB,oCAAoC;EACpC,uBAAuB;EACvB,aAAa;EACb;;;qDAGmD;AACrD;;AAEA;EACE,iBAAiB;EACjB,kBAAkB;EAClB,2BAA2B;EAC3B,gBAAgB;EAChB,yBAAyB;EACzB,mBAAmB;EACnB,qBAAqB;AACvB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,iBAAiB;EACjB,gBAAgB;EAChB,kBAAkB;EAClB,mBAAmB;AACrB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,eAAe;EACf,aAAa;EACb,SAAS;EACT,UAAU;EACV,cAAc;EACd,eAAe;AACjB;;AAEA;EACE,iBAAiB;EACjB,gBAAgB;EAChB,oBAAoB;EACpB,iCAAiC;AACnC;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,YAAY;EACZ,eAAe;EACf,uBAAuB;AACzB;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,uBAAuB;EACvB,SAAS;EACT,cAAc;EACd,qCAAqC;EACrC,kBAAkB;EAClB,aAAa;EACb,eAAe;EACf,uCAAuC;EACvC,QAAQ;AACV;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,cAAc;EACd,YAAY;AACd;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,cAAc;EACd,gBAAgB;EAChB,kBAAkB;EAClB,iBAAiB;EACjB,4BAA4B;EAC5B,sBAAsB;AACxB;;AAEA;EACE,sBAAsB;EACtB,mBAAmB;EACnB,aAAa;EACb,mBAAmB;EACnB,8BAA8B;AAChC;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,SAAS;EACT,eAAe;AACjB;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,UAAU;EACV,kBAAkB;AACpB;;AAEA;EACE,oBAAoB;EACpB,mBAAmB;EACnB,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,qBAAqB;AACvB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,WAAW;EACX,kBAAkB;EAClB,QAAQ;EACR,OAAO;EACP,cAAc;EACd,WAAW;EACX,wBAAwB;EACxB,YAAY;AACd;;;AAGA;EACE,cAAc;EACd,qBAAqB;EACrB,kBAAkB;EAClB,mBAAmB;EACnB,yBAAyB;EACzB,eAAe;EACf,8BAA8B;EAC9B,kBAAkB;EAClB,mBAAmB;EACnB,uCAAuC;AACzC;;AAEA;;EAEE,qBAAqB;EACrB,yBAAyB;AAC3B;;AAEA;EACE,8BAA8B;EAC9B,gCAAgC;EAChC,mCAAmC;AACrC;;AAEA;EACE;AACF;;AAEA;EACE,WAAW;EACX,kBAAkB;EAClB,OAAO;EACP,QAAQ;EACR,WAAW;EACX,QAAQ;EACR,WAAW;EACX,wBAAwB;EACxB,oBAAoB;EACpB,uBAAuB;EACvB;AACF;;AAEA;EACE,oBAAoB;EACpB,sBAAsB;AACxB;;AAEA;EACE,aAAa;EACb,6BAA6B;EAC7B,kBAAkB;EAClB,WAAW;EACX,OAAO;EACP,aAAa;EACb,uBAAuB;AACzB",sourcesContent:[':root {\n  --clr-primary: rgb(54, 112, 199);\n  --clr-light: #f4f4f4;\n  --clr-dark: #333;\n  --clr-warning: rgb(99, 36, 36);\n}\n\n*,\n*::before,\n*::after {\n  font-family: inherit;\n  box-sizing: border-box;\n}\n\n/* html {\n  min-width: 800px;\n} */\n\nbody {\n  margin: 2rem;\n  font-family: "Work Sans", sans-serif;\n  font-weight: 300;\n  font-size: 1.5rem;\n  background-color: var(--clr-primary);\n  color: var(--clr-light);\n  display: grid;\n  grid:\n    "header header header header" auto\n    "...... lists  active ......" auto /\n    1fr minmax(150px, 300px) minmax(198px, 500px) 1fr;\n}\n\n.title {\n  grid-area: header;\n  text-align: center;\n  font-size: calc(7vw + 2rem);\n  font-weight: 900;\n  color: rgba(0, 0, 0, 0.1);\n  letter-spacing: 1px;\n  margin: 0.3em 0 0.5em;\n}\n\n.all-tasks {\n  grid-area: lists;\n}\n\n.task-list {\n  font-size: 1.2rem;\n  line-height: 1.7;\n  list-style: circle;\n  padding-left: 1.1em;\n}\n\n.list-name {\n  cursor: pointer;\n}\n\n.list-name:hover {\n  opacity: 0.7;\n}\n\nform {\n  display: flex;\n}\n\n.btn {\n  cursor: pointer;\n  background: 0;\n  border: 0;\n  padding: 0;\n  color: inherit;\n  font-size: 1rem;\n}\n\n.btn.create {\n  font-size: 1.5rem;\n  font-weight: 900;\n  margin-right: 0.25em;\n  transition: opacity 250ms ease-in;\n}\n\n.btn.create:hover {\n  opacity: 0.7;\n}\n\n.btn-delete {\n  opacity: 0.7;\n  font-size: 1rem;\n  transition: color 200ms;\n}\n\n.btn.delete:hover {\n  color: var(--clr-warning);\n}\n\n.new {\n  background: transparent;\n  border: 0;\n  color: inherit;\n  border-bottom: 1px solid currentColor;\n  font-size: inherit;\n  outline: none;\n  padding: 0.25em;\n  transition: border-bottom 150ms ease-in;\n  order: 2;\n}\n\n.new::placeholder {\n  opacity: 0.4;\n}\n\n::-webkit-input-placeholder {\n  color: inherit;\n  opacity: 0.6;\n}\n\n.new:focus {\n  border-bottom-width: 3px;\n}\n\n.new:focus::placeholder {\n  opacity: 0.15;\n}\n\n.new.list {\n  font-size: 1.1rem;\n}\n\n.new.task {\n  margin-bottom: 0;\n}\n\n.active-list {\n  font-weight: 700;\n}\n\n.todo-list {\n  --spacer: 2rem;\n  min-width: 400px;\n  position: relative;\n  grid-area: active;\n  background: var(--clr-light);\n  color: var(--clr-dark);\n}\n\n.todo-header {\n  padding: var(--spacer);\n  background: #e4e4e4;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.list-title {\n  margin: 0 1em 0 0;\n}\n\n.task-count {\n  margin: 0;\n  font-size: 1rem;\n}\n\n.todo-body {\n  padding: var(--spacer);\n}\n\n.new-task-creator .create {\n  color: var(--clr-primary);\n}\n\n[type="checkbox"] {\n  opacity: 0;\n  position: absolute;\n}\n\n.task label {\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n}\n\n.task {\n  position: relative;\n  margin-bottom: 1.25em;\n}\n\n.task label:hover {\n  cursor: pointer;\n}\n\n.task::after {\n  content: "";\n  position: absolute;\n  right: 0;\n  left: 0;\n  bottom: -0.5em;\n  height: 1px;\n  background: currentColor;\n  opacity: 0.1;\n}\n\n\n.custom-checkbox {\n  --size: 0.75em;\n  display: inline-block;\n  width: var(--size);\n  height: var(--size);\n  margin-right: var(--size);\n  cursor: pointer;\n  border: 2px solid currentColor;\n  border-radius: 50%;\n  transform: scale(1);\n  transition: transform 300ms ease-in-out;\n}\n\n.task:hover .custom-checkbox,\n[type="checkbox"]:focus + label .custom-checkbox {\n  transform: scale(1.2);\n  color: var(--clr-primary);\n}\n\n[type="checkbox"]:checked + label .custom-checkbox {\n  background: var(--clr-primary);\n  border-color: var(--clr-primary);\n  box-shadow: inset 0 0 0px 2px white;\n}\n\n[type="checkbox"]:checked + label {\n  opacity: 0.5\n}\n\n.task label::after {\n  content: "";\n  position: absolute;\n  left: 0;\n  right: 0;\n  left: 1.5em;\n  top: 50%;\n  height: 3px;\n  background: currentColor;\n  transform: scaleX(0);\n  transform-origin: right;\n  transition: transform 150ms ease-in-out\n}\n\n[type="checkbox"]:checked + label::after {\n  transform: scaleX(1);\n  transform-origin: left;\n}\n\n.delete-stuff {\n  display: flex;\n  justify-content: space-evenly;\n  position: absolute;\n  width: 100%;\n  left: 0;\n  bottom: -35px;\n  color: var(--clr-light);\n}'],sourceRoot:""}]);const i=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,A){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var i=0;i<this.length;i++){var c=this[i][0];null!=c&&(a[c]=!0)}for(var s=0;s<n.length;s++){var l=[].concat(n[s]);r&&a[l[0]]||(void 0!==A&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=A),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),A="/*# ".concat(o," */"),a=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(a).concat([A]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var A={},a=[],i=0;i<n.length;i++){var c=n[i],s=r.base?c[0]+r.base:c[0],l=A[s]||0,d="".concat(s," ").concat(l);A[s]=l+1;var p=t(d),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=o(u,r);r.byIndex=i,e.splice(i,0,{identifier:d,updater:m,references:1})}a.push(d)}return a}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var A=r(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<A.length;a++){var i=t(A[a]);e[i].references--}for(var c=r(n,o),s=0;s<A.length;s++){var l=t(A[s]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}A=c}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var A=t.sourceMap;A&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(A))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var A=e[r]={id:r,exports:{}};return n[r](A,A.exports,t),A.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n=t(379),e=t.n(n),r=t(795),o=t.n(r),A=t(569),a=t.n(A),i=t(565),c=t.n(i),s=t(216),l=t.n(s),d=t(589),p=t.n(d),u=t(426),m={};m.styleTagTransform=p(),m.setAttributes=c(),m.insert=a().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=l(),e()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;const E=document.querySelector("[data-lists]"),C=document.querySelector("[data-new-list-form]"),B=document.querySelector("[data-new-list-input]"),f=document.querySelector("[data-delete-list-button]"),h=document.querySelector("[data-list-display-container]"),g=document.querySelector("[data-list-title]"),b=document.querySelector("[data-list-count]"),y=document.querySelector("[data-tasks]"),v=document.getElementById("task-template"),k=document.querySelector("[data-new-task-form]"),x=document.querySelector("[data-new-task-input]"),w=document.querySelector("[data-clear-complete-tasks-button]"),S="task.lists",z="task.selectedListId";let q=JSON.parse(localStorage.getItem(S))||[],j=localStorage.getItem(z);function L(){I(),T()}function I(){localStorage.setItem(S,JSON.stringify(q)),localStorage.setItem(z,j)}function T(){Y(E),q.forEach((n=>{const e=document.createElement("li");e.dataset.listId=n.id,e.classList.add("list-name"),e.innerText=n.name,n.id===j&&e.classList.add("active-list"),E.appendChild(e)}));const n=q.find((n=>n.id===j));null==j?h.style.display="none":(h.style.display="",g.innerText=n.name,W(n),Y(y),function(n){n.tasks.forEach((n=>{const e=document.importNode(v.content,!0),t=e.querySelector("input");t.id=n.id,t.checked=n.complete;const r=e.querySelector("label");r.htmlFor=n.id,r.append(n.name),y.appendChild(e)}))}(n))}function W(n){const e=n.tasks.filter((n=>!n.complete)).length,t=1===e?"task":"tasks";b.innerText=`${e} ${t} remaining`}function Y(n){for(;n.firstChild;)n.removeChild(n.firstChild)}E.addEventListener("click",(n=>{"li"===n.target.tagName.toLowerCase()&&(j=n.target.dataset.listId,L())})),y.addEventListener("click",(n=>{if("input"===n.target.tagName.toLowerCase()){const e=q.find((n=>n.id===j));e.tasks.find((e=>e.id===n.target.id)).complete=n.target.checked,I(),W(e)}})),w.addEventListener("click",(n=>{const e=q.find((n=>n.id===j));e.tasks=e.tasks.filter((n=>!n.complete)),L()})),f.addEventListener("click",(n=>{q=q.filter((n=>n.id!==j)),j=null,L()})),C.addEventListener("submit",(n=>{n.preventDefault();const e=B.value;if(null==e||""===e)return;const t=(r=e,{id:Date.now().toString(),name:r,tasks:[]});var r;B.value=null,q.push(t),L()})),k.addEventListener("submit",(n=>{n.preventDefault();const e=x.value;if(null==e||""===e)return;const t=(r=e,{id:Date.now().toString(),name:r,complete:!1});var r;x.value=null,q.find((n=>n.id===j)).tasks.push(t),L()})),T()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,