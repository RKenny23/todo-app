:root {
  --clr-primary: rgb(43, 82, 141);
  --clr-light: #f4f4f4;
  --clr-dark: #333;
  --clr-warning: rgb(99, 36, 36);
}

*,
*::before,
*::after {
  font-family: inherit;
  box-sizing: border-box;
}

html {
  font-size: 90%;
}

body {
  margin: 0 2rem;
  font-family: "Work Sans", sans-serif;
  font-weight: 300;
  font-size: 1.5rem;
  background-color: var(--clr-primary);
  color: var(--clr-light);
  display: grid;
  grid:
    "header header header header" auto
    "...... lists  active ......" auto /
    1fr minmax(180px, 300px) minmax(500px, 700px) 1fr;
  padding-bottom: 8rem;
}

.title {
  grid-area: header;
  text-align: center;
  font-size: calc(5vw + 2rem);
  font-weight: 900;
  color: rgba(0, 0, 0, 0.1);
  letter-spacing: 1px;
  margin: 0.2em 0;
}

.all-tasks {
  position: relative;
  grid-area: lists;
}

.task-list {
  font-size: 1.2rem;
  line-height: 1.7;
  list-style: circle;
  padding-left: 1.1em;
}

.list-name {
  cursor: pointer;
}

.list-name:hover {
  opacity: 0.7;
}

.btn {
  cursor: pointer;
  background: 0;
  border: 0;
  padding: 0;
  color: inherit;
  font-size: 1rem;
  float: left;
}

.btn.create {
  font-size: 1.5rem;
  font-weight: 900;
  margin-right: 0.25em;
  transition: opacity 250ms ease-in;
}

.btn.create:hover {
  opacity: 0.7;
}

.btn-delete {
  opacity: 0.7;
  font-size: 1rem;
  transition: color 200ms;
}

.btn.delete:hover {
  color: var(--clr-warning);
}

.new {
  background: transparent;
  border: 0;
  color: inherit;
  border-bottom: 1px solid currentColor;
  font-size: inherit;
  outline: none;
  padding: 0.25em;
  transition: border-bottom 150ms ease-in;
  order: 2;
}

.new::placeholder {
  opacity: 0.4;
}

::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.6;
}

.new:focus {
  border-bottom-width: 3px;
}

.new:focus::placeholder {
  opacity: 0.15;
}

.new.list {
  font-size: 1.1rem;
  /* padding-bottom: 0.5rem; */
}

.new.task {
  margin-bottom: 0;
}

.active-list {
  font-weight: 700;
}

.todo-list {
  --spacer: 2rem;
  min-width: 400px;
  width: fit-content;
  position: relative;
  grid-area: active;
  background: var(--clr-light);
  color: var(--clr-dark);
}

.todo-header {
  padding: var(--spacer);
  background: #e4e4e4;
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.list-title {
  margin: 0 1em 0 0;
}

.task-count {
  margin: 0;
  font-size: 1rem;
}

.todo-body {
  padding: var(--spacer);
}

.new-task-creator {
  padding-top: 10px;
}

.new-task-creator .create {
  color: var(--clr-primary);
}

[type="checkbox"] {
  opacity: 0;
  position: absolute;
}

.task label {
  display: inline-flex;
  align-items: center;
  position: relative;
}

.task {
  position: relative;
  margin-bottom: 1.25em;
}

.task label:hover {
  cursor: pointer;
}

/* task separators */
.task::after {
  content: "";
  position: absolute;
  right: 0;
  left: 0;
  bottom: -0.5em;
  height: 1px;
  background: currentColor;
  opacity: 0.1;
}

.custom-checkbox {
  --size: 0.75em;
  display: inline-block;
  width: var(--size);
  height: var(--size);
  margin-right: var(--size);
  cursor: pointer;
  border: 2px solid currentColor;
  border-radius: 50%;
  transform: scale(1);
  transition: transform 300ms ease-in-out;
  grid-area: checkbox;
}

.task:hover .custom-checkbox,
[type="checkbox"]:focus + label .custom-checkbox {
  transform: scale(1.2);
  color: var(--clr-primary);
}

[type="checkbox"]:checked + label .custom-checkbox {
  background: var(--clr-primary);
  border-color: var(--clr-primary);
  box-shadow: inset 0 0 0px 2px white;
}

[type="checkbox"]:checked + label {
  opacity: 0.5;
}

/* task strike-through */
.task label::after {
  content: "";
  position: absolute;
  left: 0;
  right: 0;
  left: 1.5em;
  top: 34px;
  height: 3px;
  color: red;
  opacity: 0.5;
  background: currentColor;
  transform: scaleX(0);
  transform-origin: right;
  transition: transform 150ms ease-in-out;
}

[type="checkbox"]:checked + label::after {
  transform: scaleX(1);
  transform-origin: left;
}

.delete-stuff {
  display: flex;
  justify-content: space-evenly;
  position: absolute;
  width: 100%;
  left: 0;
  bottom: -35px;
  color: var(--clr-light);
}

.title-change {
  width: 250px;
  background: transparent;
  border: 0;
  color: inherit;
  border-bottom: 3px solid currentColor;
  font-size: inherit;
  outline: none;
  font-weight: bold;
}

#due {
  display: inline-flex;
  font-size: 1rem;
  padding-bottom: 0.2rem;
}

#due::placeholder {
  opacity: 0.4;
}

.new-task-creator label {
  font-size: 1rem;
}

.new-task-name,
.new-task-date {
  display: flex;
  align-items: center;
}

.new-task-description input {
  margin: 2rem 0;
  font-size: 1rem;
  width: 260px;
}

.task-details-container {
  margin-left: 17px;
}

.new-task-date {
  margin-top: var(--spacer);
  font-size: 1rem;
}

.new-task-date label {
  margin-right: 0.5rem;
  grid-area: label;
}

.new-task-priority {
  margin-top: 0.8rem;
  font-size: 1rem;
}

.task label {
  display: grid;
  grid:
    "checkbox name btn date priority" auto
    "des des des des des" auto /
    40px minmax(150px, 400px) 40px 200px 100px;
  align-items: center;
}

.task label h3 {
  font-weight: normal;
  font-size: 1.5rem;
}

.task label h3:first-of-type {
  grid-area: name;
}

.task label h3:last-child {
  text-align: center;
  grid-area: priority;
}

.task label h3:nth-last-child(2) {
  text-align: center;
  grid-area: date;
}

.expand-btn {
  background-color: transparent;
  color: #444;
  height: 30px;
  width: 30px;
  cursor: pointer;
  border: none;
  outline: none;
  grid-area: btn;
}

.expand-btn::after {
  content: '\25be';
  font-size: 1.5rem;
}

.expand-btn.active:after {
  content: '\25c0';
  font-size: inherit;
}

.active,
.expand-btn:hover {
  background-color: rgba(43, 82, 141, 0.05);
  border-radius: 50%;
}

/* Style the collapsible content. Note: hidden by default */
.content {
  padding: 1rem;
  margin: 0 calc(40px - 0.75em);
  width: 95%;
  display: none;
  overflow: hidden;
  background-color: rgba(43, 82, 141, 0.05);
  grid-area: des;
  border-radius: 5px;
  font-size: 1rem;
  transition: border-bottom 150ms ease-in;
}


/* form > .btn.create {
  position: absolute;
  left: 0;
} */